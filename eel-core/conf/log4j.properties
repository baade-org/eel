### 子Logger是否会中父级Logger(上面设置的log4j.rootCategory)的appender里面输出,默认是true
### 为true时:子级别的Logger输出后还会在父级Logger里面输出
### 为false时:log日志只会在当前级别的Logger里面输出,不会在父级Logger里面输出
log4j.rootLogger=info,stdout

log4j.addivity.org.apache=true


logdir=d:/logs

log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%p\:%d{yyyyMMdd HH\:mm\:ss} %c\: %m%n

#########自定义日志输出##########

log4j.appender.file=org.apache.log4j.DailyRollingFileAppender
log4j.appender.file.File=${logdir}/file.log
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=%d-[TS] %p %t %c - %m%n

##register模块输出
#### 用来控制过来日志信息,如:下面至少是INFO的信息才会输出到register文件中
log4j.logger.register=INFO,register    
log4j.appender.register=org.apache.log4j.DailyRollingFileAppender   
log4j.appender.register.File=${logdir}/register.log
log4j.appender.register.DatePattern='_'yyyy-MM-dd'.log'
log4j.appender.register.layout=org.apache.log4j.PatternLayout  
log4j.appender.register.layout.ConversionPattern=%d %p [%c %L %l] - %m%n
log4j.additivity.register=true

##login模块输出
#INFO及以上几倍的log进行输出
log4j.logger.login=INFO,login 
#以文件类型输出
log4j.appender.login=org.apache.log4j.DailyRollingFileAppender   
#输出路径
log4j.appender.login.File=${logdir}/login.log
#配置文件输出的文件命名，这种格式文件会在凌晨生成一个文件，想在其他时间生成新文件可以查看DatePattern的相关配置
log4j.appender.login.DatePattern='_'yyyy-MM-dd'.log'

#输出格式
log4j.appender.login.layout=org.apache.log4j.PatternLayout  
log4j.appender.login.layout.ConversionPattern=%d %p [%c] - %m%n

# 设置这个子Logger输出日志不在父级别logger里面输出
log4j.additivity.login=false  



# 开源库的日志输出控制
# logger for jetty
org.eclipse.jetty=error  
